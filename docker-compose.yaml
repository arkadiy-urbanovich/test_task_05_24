version: '3.9'

services:
  init_elastic:
    container_name: init_elastic
    image: &python_image test_task_python
    build: &python_build
      context: ./
      dockerfile: ./Dockerfile
    volumes:
      - ./downloads/:/app/downloads/
      - ./init_elastic.py:/app/init_elastic.py
      - elastic_share:/app/elastic_share/
    depends_on:
      elastic:
        condition: service_healthy
    environment:
      PYTHONPATH: /app/
    command: python /app/init_elastic.py
#    command: sleep infinity

  web:
    container_name: web
    image: *python_image
    build: *python_build
    volumes:
      - ./web.py:/app/web.py
      - elastic_share:/app/elastic_share/
    ports:
      - '80:80'
    depends_on:
      elastic:
        condition: service_healthy
    environment:
      PYTHONPATH: /app/
    command: python /app/web.py

  web_test:
    container_name: web_test
    image: *python_image
    build: *python_build
    volumes:
      - ./web.py:/app/web.py
      - ./web_test.py:/app/web_test.py
    environment:
      PYTHONPATH: /app/
    command: python -m pytest /app/web_test.py

  elastic:
    container_name: elasticsearch
    image: elasticsearch:8.13.4
    environment:
      discovery.type: single-node
      ELASTIC_PASSWORD: whatever
    volumes:
      - elastic_share:/usr/share/
    healthcheck:
      test: curl -ks https://localhost:9200 >/dev/null || exit 1
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 6
    ports:
      - '9200:9200'


volumes:
  elastic_share: {}
